<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="description" content="Create a new password securely" />
    <meta name="author" content="Vacancy Tracker" />
    <title>Create New Password | Vacancy Tracker</title>
    <link href="/css/styles.css" rel="stylesheet" />
    <link href="/css/recover-password-page.css" rel="stylesheet" />
    <script
      src="https://use.fontawesome.com/releases/v6.3.0/js/all.js"
      crossorigin="anonymous"
    ></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  </head>

  <body>
    <div class="password-reset-container">
      <div class="reset-card">
        <div class="reset-header">
          <div class="reset-icon">
            <i class="fas fa-lock"></i>
          </div>
          <h1 class="reset-title">Create New Password</h1>
          <p class="reset-subtitle">
            <% if (typeof name !=='undefined' || typeof email !=='undefined' ) {
            %> <%= name ? name : '' %> <%= email ? '(' + email + ')' : '' %> <%
            } else { %> Secure account recovery <% } %>
          </p>
        </div>

        <div class="reset-body">
          <p class="reset-description">
            Set a strong password to protect your account. Your password should
            be at least 8 characters.
          </p>

          <div class="success-message" id="successMessage">
            <i class="fas fa-check-circle"></i>
            Password updated successfully! Redirecting to login...
          </div>

          <div class="error-message" id="errorMessage">
            <i class="fas fa-exclamation-circle"></i>
            <span id="errorText">An error occurred. Please try again.</span>
          </div>

          <form id="newPasswordForm" method="POST" action="#">
            <div class="form-group">
              <input
                class="form-control-modern"
                id="inputPassword"
                name="password"
                type="password"
                placeholder="New password"
                required
                autocomplete="new-password"
              />
              <i class="fas fa-key input-icon"></i>
            </div>

            <div class="form-group">
              <input
                class="form-control-modern"
                id="inputConfirmPassword"
                name="confirmPassword"
                type="password"
                placeholder="Confirm new password"
                required
                autocomplete="new-password"
              />
              <i class="fas fa-check input-icon"></i>
            </div>

            <button class="btn-reset" type="submit" id="updateBtn">
              <span class="loading-spinner"></span>
              <span class="btn-text">Update Password</span>
            </button>
          </form>

          <div class="divider"><span>or</span></div>

          <div class="auth-links">
            <a href="/login" class="auth-link">
              <i class="fas fa-arrow-left"></i> Back to Login
            </a>
          </div>
        </div>
      </div>
    </div>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
      crossorigin="anonymous"
    ></script>

    <script>
      $(document).ready(function () {
        const $form = $("#newPasswordForm");
        const $btn = $("#updateBtn");
        const $btnText = $btn.find(".btn-text");
        const $successMessage = $("#successMessage");
        const $errorMessage = $("#errorMessage");
        const $errorText = $("#errorText");
        const $password = $("#inputPassword");
        const $confirm = $("#inputConfirmPassword");

        const userId = (function getUserIdFromPath() {
          const parts = window.location.pathname.split("/").filter(Boolean);
          // Expecting: ['', 'recover-password', ':id'] → after filter → ['recover-password', ':id']
          return parts.length >= 2 ? parts[1] : null;
        })();

        const token = new URLSearchParams(window.location.search).get("token");

        if (!userId || !token) {
          showError("Invalid or expired password reset link.");
          $btn.prop("disabled", true);
          $password.prop("disabled", true);
          $confirm.prop("disabled", true);
          return;
        }

        $form.on("submit", function (e) {
          e.preventDefault();

          hideMessages();

          const password = $password.val().trim();
          const confirm = $confirm.val().trim();

          if (!password || !confirm) {
            showError("Please fill in both password fields.");
            return;
          }

          if (password.length < 8) {
            showError("Password must be at least 8 characters long.");
            return;
          }

          if (password !== confirm) {
            showError("Passwords do not match.");
            return;
          }

          setLoading(true);

          $.ajax({
            url: `/recover-password/${userId}?token=${encodeURIComponent(
              token
            )}`,
            method: "PATCH",
            contentType: "application/json",
            data: JSON.stringify({ token, password }),
            success: function () {
              showSuccess();
              setTimeout(function () {
                window.location.href = "/login";
              }, 1200);
            },
            error: function (xhr) {
              let message = "Something went wrong. Please try again.";
              if (xhr.responseJSON && xhr.responseJSON.message) {
                message = xhr.responseJSON.message;
              } else if (
                xhr.responseJSON &&
                xhr.responseJSON.error &&
                xhr.responseJSON.error.name === "ZodError"
              ) {
                message =
                  (xhr.responseJSON.error.issues || [])
                    .map((i) => i.message)
                    .join(" ") || message;
              }
              showError(message);
            },
            complete: function () {
              setLoading(false);
            },
          });
        });

        function setLoading(isLoading) {
          if (isLoading) {
            $btn.addClass("loading").prop("disabled", true);
            $btnText.text("Updating...");
          } else {
            $btn.removeClass("loading").prop("disabled", false);
            $btnText.text("Update Password");
          }
        }

        function showSuccess() {
          $successMessage.show();
          $errorMessage.hide();
        }

        function showError(message) {
          $errorText.text(message);
          $errorMessage.show();
          $successMessage.hide();
        }

        function hideMessages() {
          $successMessage.hide();
          $errorMessage.hide();
        }

        // Simple input focus styles reuse
        $password
          .add($confirm)
          .on("focus", function () {
            $(this).parent().addClass("focused");
          })
          .on("blur", function () {
            $(this).parent().removeClass("focused");
          });
      });
    </script>
  </body>
</html>
