<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="Modern login page for Vacancy Tracker" />
    <meta name="author" content="" />
    <title>Login - Vacancy Tracker</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="css/styles.css" rel="stylesheet" />
    <script src="https://use.fontawesome.com/releases/v6.3.0/js/all.js" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="css/login-page.css" rel="stylesheet" />
  
</head>

<body>
    <div class="login-container">
        <div class="login-card">
            <div class="login-header">
                <h1>Welcome Back</h1>
                <p>Sign in to your Vacancy Tracker account</p>
            </div>

            <div class="login-body">
                <form id="loginForm" method="post" action="/login-user">
                    <div class="form-group">
                        <label for="inputEmail" class="form-label">Email Address</label>
                        
                        <input class="form-input" id="inputEmail" type="email" placeholder="Enter your email"
                            required />
                        
                    </div>

                    <div class="form-group">
                        <label for="inputPassword" class="form-label">Password</label>
                        <input class="form-input" id="inputPassword" type="password" placeholder="Enter your password"
                            required />
                       
                    </div>

                    <div class="checkbox-wrapper">
                        <input class="custom-checkbox" id="inputRememberPassword" type="checkbox" />
                        <label class="checkbox-label" for="inputRememberPassword">
                            Remember me for 30 days
                        </label>
                    </div>

                    <button class="login-btn" type="submit" id="loginButton">
                        <div class="loading-spinner" id="loadingSpinner"></div>
                        <span id="buttonText">Sign In</span>
                    </button>

                    <div class="forgot-password">
                        <a href="/forgot-password">Forgot your password?</a>
                    </div>

                    <div id="error-div" class="error-message"></div>
                    <div id="success-div" class="success-message"></div>
                </form>
            </div>

            <div class="signup-link">
                <p>Don't have an account? <a href="/register">Create one here</a></p>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
        crossorigin="anonymous"></script>
    <script src="js/scripts.js"></script>
    <script>
        $(document).ready(function () {
            const form = $('#loginForm');
            const emailInput = $('#inputEmail');
            const passwordInput = $('#inputPassword');
            const submitButton = $('#loginButton');
            const loadingSpinner = $('#loadingSpinner');
            const buttonText = $('#buttonText');
            const errorDiv = $('#error-div');
            const successDiv = $('#success-div');

            // Input validation styling
            function validateInput(input) {
                if (input.val().trim() === '') {
                    input.addClass('error');
                    return false;
                } else {
                    input.removeClass('error');
                    return true;
                }
            }

            // Real-time validation
            emailInput.on('blur', function () {
                validateInput($(this));
            });

            passwordInput.on('blur', function () {
                validateInput($(this));
            });

            // Clear errors on input
            emailInput.add(passwordInput).on('input', function () {
                $(this).removeClass('error');
                hideMessages();
            });

            function showError(message) {
                errorDiv.html(`<i class="fas fa-exclamation-circle"></i> ${message}`);
                errorDiv.addClass('show');
                successDiv.removeClass('show');
            }

            function showSuccess(message) {
                successDiv.html(`<i class="fas fa-check-circle"></i> ${message}`);
                successDiv.addClass('show');
                errorDiv.removeClass('show');
            }

            function hideMessages() {
                errorDiv.removeClass('show');
                successDiv.removeClass('show');
            }

            function setLoadingState(isLoading) {
                if (isLoading) {
                    submitButton.prop('disabled', true);
                    loadingSpinner.show();
                    buttonText.text('Signing In...');
                } else {
                    submitButton.prop('disabled', false);
                    loadingSpinner.hide();
                    buttonText.text('Sign In');
                }
            }

            form.on('submit', function (e) {
                e.preventDefault();

                // Clear previous messages
                hideMessages();

                // Validate inputs
                const isEmailValid = validateInput(emailInput);
                const isPasswordValid = validateInput(passwordInput);

                if (!isEmailValid || !isPasswordValid) {
                    showError('Please fill in all required fields.');
                    return;
                }

                // Validate email format
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailRegex.test(emailInput.val())) {
                    emailInput.addClass('error');
                    showError('Please enter a valid email address.');
                    return;
                }

                setLoadingState(true);

                const data = {
                    email: emailInput.val().trim(),
                    password: passwordInput.val()
                };

                $.ajax({
                    type: 'POST',
                    url: '/login-user',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    timeout: 10000, // 10 second timeout
                    success: function (response) {
                        console.log('Login successful:', response);
                        showSuccess('Login successful! Redirecting...');

                        // Add a slight delay for better UX
                        setTimeout(function () {
                            window.location.href = '/dashboard';
                        }, 1000);
                    },
                    error: function (xhr, status, error) {
                        setLoadingState(false);

                        if (status === 'timeout') {
                            showError('Request timed out. Please try again.');
                            return;
                        }

                        let errorMessage = 'An error occurred. Please try again.';
                        console.log(xhr.responseJSON)
                        if (xhr.responseJSON && xhr.responseJSON.error) {
                            console.log(xhr.responseJSON)
                            if(xhr.responseJSON?.error?.name === "ZodError" ){
                                xhr.responseJSON?.error.issues.map((e)=>{
                                    errorMessage += `${e.message}`
                                })
                            }
                        } else if (xhr.status === 401) {
                            errorMessage = 'Invalid email or password.';
                        } else if (xhr.status === 429) {
                            errorMessage = 'Too many login attempts. Please try again later.';
                        } else if (xhr.status >= 500) {
                            errorMessage = 'Server error. Please try again later.';
                        }else if(xhr.status === 404){
                            errorMessage = xhr.responseJSON.message;
                        }else{
                            errorMessage = xhr.responseJSON.message;
                        }

                        showError(errorMessage);
                    }
                });
            });

            // Keyboard shortcuts
            $(document).on('keydown', function (e) {
                if (e.key === 'Enter' && (emailInput.is(':focus') || passwordInput.is(':focus'))) {
                    form.submit();
                }
            });

            // Focus first input on load
            emailInput.focus();
        });
    </script>
</body>

</html>