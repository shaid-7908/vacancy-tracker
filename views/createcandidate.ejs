<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="description" content="Create a new candidate" />
    <meta name="author" content="Vacancy Tracker" />
    <title>Create Candidate | Vacancy Tracker</title>
    <link
      href="https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/style.min.css"
      rel="stylesheet"
    />
    <link href="css/styles.css" rel="stylesheet" />
    <script
      src="https://use.fontawesome.com/releases/v6.3.0/js/all.js"
      crossorigin="anonymous"
    ></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  </head>

  <body class="sb-nav-fixed">
    <%- include('layouts/topnav')%>
    <div id="layoutSidenav">
      <%- include('layouts/sidebar') %>
      <div id="layoutSidenav_content">
        <main>
          <div class="container-fluid px-4">
            <h1 class="mt-4">Create Candidate</h1>
            <ol class="breadcrumb mb-4">
              <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
              <li class="breadcrumb-item active">Create Candidate</li>
            </ol>

            <div class="card mb-4">
              <div class="card-header">
                <i class="fas fa-user-plus me-1"></i>
                New Candidate
              </div>
              <div class="card-body">
                <div
                  id="successMessage"
                  class="alert alert-success d-none"
                  role="alert"
                >
                  <i class="fas fa-check-circle me-2"></i>
                  Candidate created successfully.
                </div>
                <div
                  id="errorMessage"
                  class="alert alert-danger d-none"
                  role="alert"
                >
                  <i class="fas fa-exclamation-circle me-2"></i>
                  <span id="errorText"
                    >An error occurred. Please try again.</span
                  >
                </div>

                <form id="candidateForm" novalidate>
                  <div class="row g-3">
                    <div class="col-md-6">
                      <label for="firstName" class="form-label"
                        >First name</label
                      >
                      <input
                        id="firstName"
                        type="text"
                        class="form-control"
                        placeholder="First name"
                        required
                      />
                    </div>
                    <div class="col-md-6">
                      <label for="lastName" class="form-label">Last name</label>
                      <input
                        id="lastName"
                        type="text"
                        class="form-control"
                        placeholder="Last name"
                        required
                      />
                    </div>

                    <div class="col-md-6">
                      <label for="email" class="form-label">Email</label>
                      <input
                        id="email"
                        type="email"
                        class="form-control"
                        placeholder="Email"
                        autocomplete="email"
                        required
                      />
                    </div>
                    <div class="col-md-6">
                      <label for="phone" class="form-label">Phone</label>
                      <input
                        id="phone"
                        type="tel"
                        class="form-control"
                        placeholder="Phone"
                        required
                      />
                    </div>

                    <div class="col-md-6">
                      <label for="scheduledDate" class="form-label"
                        >Scheduled date</label
                      >
                      <input
                        id="scheduledDate"
                        type="date"
                        class="form-control"
                        required
                      />
                    </div>
                    <div class="col-md-6">
                      <label for="actualDate" class="form-label"
                        >Actual date (optional)</label
                      >
                      <input id="actualDate" type="date" class="form-control" />
                    </div>

                    <div class="col-md-6">
                      <label for="arrivalStatus" class="form-label"
                        >Arrival status</label
                      >
                      <select id="arrivalStatus" class="form-select">
                        <option value="scheduled" selected>Scheduled</option>
                        <option value="arrived">Arrived</option>
                        <option value="no-show">No-show</option>
                      </select>
                    </div>

                    <div class="col-md-6">
                      <label for="candidateStatus" class="form-label"
                        >Candidate status</label
                      >
                      <select id="candidateStatus" class="form-select">
                        <option value="new" selected>New</option>
                        <option value="assigned">Assigned</option>
                        <option value="hired">Hired</option>
                        <option value="rejected">Rejected</option>
                      </select>
                    </div>

                    <div class="col-12">
                      <label for="skills" class="form-label"
                        >Skills (comma-separated IDs)</label
                      >
                      <input
                        id="skills"
                        type="text"
                        class="form-control"
                        placeholder="e.g. 64aa..., 64bb..., 64cc..."
                        required
                      />
                    </div>
                  </div>

                  <div class="mt-4">
                    <button
                      class="btn btn-primary"
                      type="submit"
                      id="createBtn"
                    >
                      <span
                        class="spinner-border spinner-border-sm me-2 d-none"
                        role="status"
                        aria-hidden="true"
                      ></span>
                      <span class="btn-text">Create</span>
                    </button>
                    <a href="/" class="btn btn-link">Back to Dashboard</a>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </main>
        <footer class="py-4 bg-light mt-auto">
          <div class="container-fluid px-4">
            <div
              class="d-flex align-items-center justify-content-between small"
            >
              <div class="text-muted">Copyright &copy; Your Website 2023</div>
              <div>
                <a href="#">Privacy Policy</a>
                &middot;
                <a href="#">Terms &amp; Conditions</a>
              </div>
            </div>
          </div>
        </footer>
      </div>
    </div>

    <script>
      $(function () {
        const $form = $("#candidateForm");
        const $btn = $("#createBtn");
        const $btnText = $btn.find(".btn-text");
        const $spinner = $btn.find(".spinner-border");
        const $successMessage = $("#successMessage");
        const $errorMessage = $("#errorMessage");
        const $errorText = $("#errorText");

        function setLoading(isLoading) {
          if (isLoading) {
            $btn.prop("disabled", true);
            $spinner.removeClass("d-none");
            $btnText.text("Creating...");
          } else {
            $btn.prop("disabled", false);
            $spinner.addClass("d-none");
            $btnText.text("Create");
          }
        }

        function showSuccess() {
          $successMessage.removeClass("d-none");
          $errorMessage.addClass("d-none");
        }

        function showError(message) {
          $errorText.text(message);
          $errorMessage.removeClass("d-none");
          $successMessage.addClass("d-none");
        }

        function hideMessages() {
          $successMessage.addClass("d-none");
          $errorMessage.addClass("d-none");
        }

        function isValidEmail(email) {
          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          return emailRegex.test(email);
        }

        $form.on("submit", function (e) {
          e.preventDefault();
          hideMessages();

          const firstName = $("#firstName").val().trim();
          const lastName = $("#lastName").val().trim();
          const email = $("#email").val().trim().toLowerCase();
          const phone = $("#phone").val().trim();
          const scheduledDate = $("#scheduledDate").val();
          const actualDate = $("#actualDate").val();
          const arrivalStatus = $("#arrivalStatus").val();
          const candidateStatus = $("#candidateStatus").val();
          const skillsRaw = $("#skills").val().trim();

          if (
            !firstName ||
            !lastName ||
            !email ||
            !phone ||
            !scheduledDate ||
            !skillsRaw
          ) {
            showError("Please fill in all required fields.");
            return;
          }
          if (!isValidEmail(email)) {
            showError("Please enter a valid email address.");
            return;
          }

          const skills = skillsRaw
            .split(",")
            .map((s) => s.trim())
            .filter(Boolean);

          const payload = {
            first_name: firstName,
            last_name: lastName,
            contact: { email, phone },
            arrival: {
              scheduledDate: scheduledDate
                ? new Date(scheduledDate).toISOString()
                : null,
              actualDate: actualDate
                ? new Date(actualDate).toISOString()
                : null,
              status: arrivalStatus || "scheduled",
            },
            skills,
            status: candidateStatus || "new",
          };

          setLoading(true);
          $.ajax({
            url:'/multi-skills/create',
            method:'POST',
            contentType:'application/json',
            data:JSON.stringify({skillNames:skills}),
            success:function(skillResponse){
              const payload = {
                first_name: firstName,
                last_name: lastName,
                contact: { email, phone },
                arrival: {
                    scheduledDate: scheduledDate ? new Date(scheduledDate).toISOString() : null,
                    actualDate: actualDate ? new Date(actualDate).toISOString() : null,
                    status: arrivalStatus || 'scheduled',
                },
                skills: skillResponse.data.skill_ids, // <-- use the IDs returned from step 1
                status: candidateStatus || 'new',
            };
            $.ajax({
                url:'/single-candidate/create',
                method:'POST',
                contentType:'application/json',
                data:JSON.stringify(payload),
                success:function (){
                   showSuccess();
                    $form[0].reset()
                },
                error:function (xhr){
                   let message = 'Something went wrong. Please try again.';
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        message = xhr.responseJSON.message;
                    }
                    showError(message);
                },
                complete:function (){
                    setLoading(false)
                }
            })

            },
            error:function(xhr){
              let message = 'Failed to resolve skills.';
            if (xhr.responseJSON && xhr.responseJSON.message) {
                message = xhr.responseJSON.message;
            }
            showError(message);
            setLoading(false);
            }
          })
        // $.ajax({
        //     url: "/candidates",
        //     method: "POST",
        //     contentType: "application/json",
        //     data: JSON.stringify(payload),
        //     success: function () {
        //       showSuccess();
        //       $form[0].reset();
        //     },
        //     error: function (xhr) {
        //       let message = "Something went wrong. Please try again.";
        //       if (xhr.responseJSON && xhr.responseJSON.message) {
        //         message = xhr.responseJSON.message;
        //       } else if (xhr.status === 404) {
        //         message =
        //           "Endpoint not found. Please ensure the API route for creating candidates is available.";
        //       }
        //       showError(message);
        //     },
        //     complete: function () {
        //       setLoading(false);
        //     },
        //   });

        });
      });
    </script>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
      crossorigin="anonymous"
    ></script>
    <script src="js/scripts.js"></script>
  </body>
</html>
